[{"F:\\My files\\ТЗ\\Incora\\incora-react\\src\\index.js":"1","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\App.js":"2","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\Login.js":"3","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\Articles.js":"4","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\SingleArticle(view).js":"5","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\SingleArticle(edit).js":"6"},{"size":225,"mtime":1607679430829,"results":"7","hashOfConfig":"8"},{"size":1322,"mtime":1607718035244,"results":"9","hashOfConfig":"8"},{"size":1883,"mtime":1607713575861,"results":"10","hashOfConfig":"8"},{"size":4323,"mtime":1607722315985,"results":"11","hashOfConfig":"8"},{"size":1034,"mtime":1607717756079,"results":"12","hashOfConfig":"8"},{"size":2621,"mtime":1607720110191,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1ut8kz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"F:\\My files\\ТЗ\\Incora\\incora-react\\src\\index.js",[],["32","33"],"F:\\My files\\ТЗ\\Incora\\incora-react\\src\\App.js",["34"],"import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport axios from 'axios';\n\nimport LoginForm from './pages/Login';\nimport AllArticles from './pages/Articles';\nimport SingleArticleView from './pages/SingleArticle(view)';\nimport SingleArticleEdit from './pages/SingleArticle(edit)';\n\nfunction App() {\n \n  const [currentUser, setCurrentUser] = React.useState({});\n\n  // const handlePostClick = async (id) => {\n  //     try {\n  //         let post = await axios(`https://jsonplaceholder.typicode.com/posts/${id}`);\n  //         console.log(post);\n  //     } catch(e) {\n  //         console.log(e);\n  //     }\n  // }\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <LoginForm currentUser={currentUser} setCurrentUser={setCurrentUser} />\n          </Route>\n\n          <Route path=\"/articles\" exact>\n            <AllArticles currentUser={currentUser} />\n          </Route>\n\n          <Route path=\"/articles/:id\" exact>\n            <SingleArticleView currentUser={currentUser} />\n          </Route> \n\n          <Route path=\"/articles/:id/edit\" exact>\n            <SingleArticleEdit currentUser={currentUser} />\n          </Route> \n\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\Login.js",["35"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction Login({currentUser, setCurrentUser}) {\r\n\r\n    const [email, setEmail] = React.useState('');\r\n    const [users, setUsers] = React.useState(undefined);\r\n\r\n    React.useEffect(async () => {\r\n        try {\r\n            let users = await axios('https://jsonplaceholder.typicode.com/users');\r\n            setUsers(users.data);\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }, []);\r\n\r\n    const handleLogChange = (e) => {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleLogClick = () => {\r\n        let success = false;\r\n  \r\n        users.forEach(async (el) => {\r\n\r\n            try {\r\n                if(el.email === email) {\r\n                    success = true;\r\n                    setCurrentUser({...el, status: 'success'});\r\n                }\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n  \r\n        if(!success) {\r\n            setCurrentUser({\r\n                status: 'fail',\r\n                message: 'Cant get current user!'\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        currentUser.status === 'success' ? \r\n\r\n        <Redirect to=\"/articles\"/>\r\n\r\n        :\r\n\r\n        <div className=\"container\">\r\n            <div className=\"login-form\">\r\n                <div className=\"login-form__content\">\r\n                    <p>Please paste your email</p>\r\n                    <input type=\"text\" value={email} onChange={handleLogChange}></input>\r\n                    <button className=\"btn-log\" onClick={handleLogClick}>Login</button>\r\n                    {\r\n                        currentUser.status === 'fail' ? <p>{currentUser.message}</p> : null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\Articles.js",["36","37"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nfunction Articles({currentUser}) {\r\n\r\n    const [posts, setPosts] = React.useState([]);\r\n    const [redirectTo, setRedirectTo] = React.useState(undefined);\r\n    const [addedWork, setAddedWork] = React.useState({});\r\n    const [successAddedWork, setSuccessAddedWork] = React.useState(undefined);\r\n\r\n    React.useEffect(async () => {\r\n\r\n        if(currentUser.status === 'success' || currentUser.status !== undefined) {\r\n            const result = await axios(`https://jsonplaceholder.typicode.com/posts?userId=${currentUser.id}`);\r\n            setPosts(result.data);\r\n        }\r\n    }, []);\r\n\r\n    const handleView = (el) => {\r\n        setRedirectTo(`/articles/${el.id}`);\r\n    }\r\n\r\n    const handleEdit = (el) => {\r\n        setRedirectTo(`/articles/${el.id}/edit`);\r\n    }\r\n\r\n    const handleDelete = async (i) => {\r\n        let fetchId = posts[i].id\r\n        let newList = [...posts];\r\n        newList = newList.filter((_, index) => index !== i );\r\n        setPosts(newList);\r\n\r\n        let result = await axios.delete(`https://jsonplaceholder.typicode.com/posts/${fetchId}`);\r\n        console.log(result);\r\n    }\r\n\r\n    const handleChange = (e, part) => {\r\n        setAddedWork({...addedWork, [part]: e.target.value});\r\n    }\r\n\r\n    const handleAdd = async () => {\r\n        try {\r\n            let finalEditedWork = {...addedWork};\r\n            finalEditedWork.userId = currentUser.id;\r\n            finalEditedWork.id = posts.length;\r\n\r\n            let newList = [...posts];\r\n            newList.push(finalEditedWork);\r\n            setPosts(newList);\r\n\r\n            let result = await axios.post('https://jsonplaceholder.typicode.com/posts', finalEditedWork);\r\n            console.log(result);\r\n\r\n            if(result.status === 201) {\r\n                setSuccessAddedWork('Succesfully added work!');\r\n            }\r\n            else {\r\n                setSuccessAddedWork('Check dev tools to view status code');\r\n            }\r\n\r\n        } catch(e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        redirectTo === undefined ? \r\n\r\n        <div className=\"user-all-posts\">\r\n            <h1>List of posts</h1>\r\n            <ol>\r\n                {\r\n                    posts.length !== 0 ? \r\n\r\n                    <div>\r\n                        {\r\n                            posts.map((el, i) => {\r\n                                return (\r\n                                <li key={i}>{el.title} \r\n                                    <small className=\"view\" onClick={() => handleView(el)}>get details</small>\r\n                                    <small className=\"edit\" onClick={() => handleEdit(el)}>edit</small>\r\n                                    <small className=\"delete\" onClick={() => handleDelete(i)}>delete</small>\r\n                                </li>\r\n                                )\r\n                                })\r\n                        }\r\n                        \r\n\r\n                        <div className=\"user-all-posts__add\">\r\n                            <h4>Add new article!</h4>\r\n                            <div className=\"user-all-posts__add--inp\">\r\n                                <p>Title</p>\r\n                                <textarea value={addedWork.title} onChange={(e) => handleChange(e, 'title')}/>\r\n                            </div>\r\n                            <div className=\"user-all-posts__add--inp\">\r\n                                <p>Body</p>\r\n                                <textarea value={addedWork.body} onChange={(e) => handleChange(e, 'body')}/>\r\n                            </div>\r\n                            <button className=\"user-all-posts__add--sub\" onClick={() => handleAdd()}>Add new article</button>\r\n                            {\r\n                                successAddedWork&&\r\n                                <p>{successAddedWork}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    :\r\n\r\n                    <div className=\"login-in\"><Link to=\"/\">Please first login in</Link></div>\r\n                    \r\n                }\r\n            </ol>\r\n        </div>\r\n\r\n        :\r\n\r\n        <Redirect to={redirectTo} />\r\n    )\r\n}\r\n\r\nexport default Articles\r\n","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\SingleArticle(view).js",["38","39","40"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction SingleArticle({currentUser}) {\r\n\r\n    let { id } = useParams();\r\n    let [post, setPost] = React.useState({});\r\n\r\n    React.useEffect(async () => {\r\n        if(currentUser.status === 'success' || currentUser.status !== undefined) {\r\n            let result = await axios(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n            setPost(result.data);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n    \r\n        <div className=\"user-single-post\">\r\n            <h1>Post number: {post.id}</h1>\r\n            {\r\n                currentUser.status === 'fail' || currentUser.status === undefined ?\r\n\r\n                <div className=\"login-in\"><Link to=\"/\">Please first login in</Link></div>\r\n                :\r\n                <p><strong>Title:</strong> {post.title}<br/><br/><strong>Body: </strong>{post.body}</p>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SingleArticle\r\n","F:\\My files\\ТЗ\\Incora\\incora-react\\src\\pages\\SingleArticle(edit).js",["41","42","43"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction SingleArticle({currentUser}) {\r\n\r\n    let { id } = useParams();\r\n    let [post, setPost] = React.useState({});\r\n    let [successEdited, setSuccessEdit] = React.useState(undefined);\r\n\r\n    React.useEffect(async () => {\r\n        if(currentUser.status === 'success' || currentUser.status !== undefined) {\r\n            let result = await axios(`https://jsonplaceholder.typicode.com/posts/${id}`);\r\n            setPost(result.data);\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e, part) => {\r\n        let newArticle = {...post};\r\n        newArticle[part] = e.target.value;\r\n        setPost(newArticle);\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            let result = await axios.put(`https://jsonplaceholder.typicode.com/posts/${id}`, post);\r\n            console.log(result);\r\n\r\n            if(result.status === 200) {\r\n                setSuccessEdit('Success edited!');\r\n            }\r\n            else {\r\n                setSuccessEdit('Check dev tools to view status code');\r\n            }\r\n        } catch(e) {\r\n            setSuccessEdit('Something goes wrong!');\r\n            console.log(e);\r\n        }   \r\n    }\r\n\r\n    return (\r\n    \r\n        <div className=\"user-single-post\">\r\n            <h1>Post number: {post.id}</h1>\r\n            {\r\n                currentUser.status === 'fail' || currentUser.status === undefined ?\r\n\r\n                <div className=\"login-in\"><Link to=\"/\">Please first login in</Link></div>\r\n                :\r\n                // <p><strong>Title:</strong> {post.title}<br/><br/><strong>Body: </strong>{post.body}</p>\r\n                <div className=\"user-single-post__edit\">\r\n                    <div className=\"user-single-post__edit--inp\">\r\n                        <p>Title</p>\r\n                        <textarea value={post.title} onChange={(e) => handleChange(e, 'title')}/>\r\n                    </div>\r\n                    <div className=\"user-single-post__edit--inp\">\r\n                        <p>Body</p>\r\n                        <textarea value={post.body} onChange={(e) => handleChange(e, 'body')}/>\r\n                    </div>\r\n                    <button className=\"user-single-post__edit--sub\" onClick={handleSubmit}>Save</button>\r\n                    {\r\n                        successEdited&&\r\n                            <p>{successEdited}</p>\r\n                            \r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SingleArticle\r\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":10,"column":21,"nodeType":"54","endLine":17,"endColumn":6},{"ruleId":"52","severity":1,"message":"53","line":12,"column":21,"nodeType":"54","endLine":18,"endColumn":6},{"ruleId":"52","severity":1,"message":"55","line":18,"column":8,"nodeType":"56","endLine":18,"endColumn":10,"suggestions":"57"},{"ruleId":"48","severity":1,"message":"58","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":11,"column":21,"nodeType":"54","endLine":16,"endColumn":6},{"ruleId":"52","severity":1,"message":"59","line":16,"column":8,"nodeType":"56","endLine":16,"endColumn":10,"suggestions":"60"},{"ruleId":"48","severity":1,"message":"58","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":12,"column":21,"nodeType":"54","endLine":17,"endColumn":6},{"ruleId":"52","severity":1,"message":"59","line":17,"column":8,"nodeType":"56","endLine":17,"endColumn":10,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has missing dependencies: 'currentUser.id' and 'currentUser.status'. Either include them or remove the dependency array.","ArrayExpression",["64"],"'Axios' is defined but never used.","React Hook React.useEffect has missing dependencies: 'currentUser.status' and 'id'. Either include them or remove the dependency array.",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},{"desc":"69","fix":"71"},"Update the dependencies array to be: [currentUser.id, currentUser.status]",{"range":"72","text":"73"},"Update the dependencies array to be: [currentUser.status, id]",{"range":"74","text":"75"},{"range":"76","text":"75"},[695,697],"[currentUser.id, currentUser.status]",[525,527],"[currentUser.status, id]",[595,597]]